name: Command - deploy

#
# An IssueOps Command. This command provides a "/deploy <env>" command that can be used from Issue comments
# This is very similar to a Slack Slash command in intent.
#

on:
  issue_comment:
    types:
      - created
      - edited

jobs:
  command:
    name: Command
    runs-on: ubuntu-20.04

    # Save some actions minutes, and only execute when necessary :-)
    if: startsWith(github.event.comment.body, '/deploy ')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get temporary token
        id: temp_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.OCTODEMOBOT_APPLICATION_ID_REPO_AUTOMATION }}
          application_private_key: ${{ secrets.OCTODEMOBOT_APPLICATION_KEY_REPO_AUTOMATION }}

      - name: Parse and Respond to Command
        uses: actions/github-script@v3
        with:
          github-token: ${{ steps.temp_token.outputs.token }}
          script: |
            const scriptPath = require('path').resolve('./.github/workflows/scripts/create_deployment.js');
            const utils = require(scriptPath);

            // Put eyes on the comment
            await github.reactions.createForIssueComment({
                ...context.repo,
                comment_id: context.payload.comment.id,
                content: 'eyes'
              });

            const request = context.payload.comment.body.trim();
            const ALLOWED_ENVIRONMENTS = ['qa', 'test'];

            try {
              const parts = utils.validateEnvironment(request);

              // Ensure request is one of the allowed options
              if (parts && ALLOWED_ENVIRONMENTS.indexOf(parts.name) > -1) {
                core.info(`deploy request for environment "${parts.name} in ${parts.cloud}"`);

                await github.issues.addLabels({
                  ...context.repo,
                  issue_number: context.issue.number,
                  labels: [`deploy to ${parts.cloud} ${parts.name}`]
                });
              } else {
                core.setFailed(`Unsupported environment for deploy slash command; ${parts.name}`);

                await github.issues.createComment({
                  ...context.repo,
                  issue_number: context.issue.number,
                  body: `:red_circle: Unsupported environment for deploy slash command; ${parts.name}, can only use this command with environments _${ALLOWED_ENVIRONMENTS.join(', ')}_.`
                });
              }
            } catch (err) {
              core.error(err);
              core.setFailed(`Error processing request; ${request}`);

              await github.issues.createComment({
                  ...context.repo,
                  issue_number: context.issue.number,
                  body: `:red_circle: Problem with __deploy__ slash command; ${err.message}`
                });
            }
